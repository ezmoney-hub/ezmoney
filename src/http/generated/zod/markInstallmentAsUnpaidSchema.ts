/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { z } from 'zod'

export const markInstallmentAsUnpaidPathParamsSchema = z.object({
  installmentId: z.string().uuid(),
})

/**
 * @description Success
 */
export const markInstallmentAsUnpaid200Schema = z
  .object({
    success: z.literal(true),
    errors: z.enum(['null']).nullable(),
    data: z.enum(['null']).nullable(),
  })
  .describe('Success')

/**
 * @description Bad Request
 */
export const markInstallmentAsUnpaid400Schema = z
  .object({
    success: z.literal(false),
    errors: z.array(z.string()),
    data: z.enum(['null']).nullable(),
  })
  .describe('Bad Request')

/**
 * @description Not Found
 */
export const markInstallmentAsUnpaid404Schema = z
  .object({
    success: z.literal(false),
    errors: z.array(z.string()),
    data: z.enum(['null']).nullable(),
  })
  .describe('Not Found')

export const markInstallmentAsUnpaidMutationResponseSchema = z.lazy(() => markInstallmentAsUnpaid200Schema)
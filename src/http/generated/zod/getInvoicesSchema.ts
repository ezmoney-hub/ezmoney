/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { z } from 'zod'

/**
 * @description Success
 */
export const getInvoices200Schema = z
  .object({
    success: z.literal(true),
    errors: z.enum(['null']).nullable(),
    data: z.array(
      z.object({
        id: z.string(),
        name: z.string(),
        unitValue: z.number(),
        totalInstallments: z.number(),
        issueDate: z.string().datetime(),
        type: z.enum(['FIXED', 'RECURRING', 'ONE_TIME']),
        dueDate: z.string().datetime(),
        category: z.object({
          label: z.string(),
          color: z.string(),
        }),
        status: z.enum(['PENDING', 'PAID', 'OVERDUE', 'DRAFT']),
      }),
    ),
  })
  .describe('Success')

/**
 * @description Bad Request
 */
export const getInvoices400Schema = z
  .object({
    success: z.literal(false),
    errors: z.array(z.string()),
    data: z.enum(['null']).nullable(),
  })
  .describe('Bad Request')

export const getInvoicesQueryResponseSchema = z.lazy(() => getInvoices200Schema)
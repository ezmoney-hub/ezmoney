/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { z } from 'zod'

export const getInvoicesInstallmentsPathParamsSchema = z.object({
  invoiceId: z.string().uuid(),
})

/**
 * @description Success
 */
export const getInvoicesInstallments200Schema = z
  .object({
    success: z.literal(true),
    errors: z.enum(['null']).nullable(),
    data: z.object({
      installments: z.array(
        z.object({
          id: z.string(),
          unitValue: z.number(),
          dueDate: z.string(),
          status: z.enum(['PENDING', 'PAID', 'OVERDUE', 'DRAFT']),
          isPaid: z.boolean(),
        }),
      ),
    }),
  })
  .describe('Success')

/**
 * @description Bad Request
 */
export const getInvoicesInstallments400Schema = z
  .object({
    success: z.literal(false),
    errors: z.array(z.string()),
    data: z.enum(['null']).nullable(),
  })
  .describe('Bad Request')

/**
 * @description Not Found
 */
export const getInvoicesInstallments404Schema = z
  .object({
    success: z.literal(false),
    errors: z.array(z.string()),
    data: z.enum(['null']).nullable(),
  })
  .describe('Not Found')

export const getInvoicesInstallmentsQueryResponseSchema = z.lazy(() => getInvoicesInstallments200Schema)
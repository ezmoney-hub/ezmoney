/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { z } from 'zod'

/**
 * @description Success
 */
export const signIn200Schema = z
  .object({
    success: z.literal(true),
    errors: z.enum(['null']).nullable(),
    data: z.object({
      accessToken: z.string(),
    }),
  })
  .describe('Success')

/**
 * @description Bad Request
 */
export const signIn400Schema = z
  .object({
    success: z.literal(false),
    errors: z.array(z.string()),
    data: z.enum(['null']).nullable(),
  })
  .describe('Bad Request')

/**
 * @description Unauthorized
 */
export const signIn401Schema = z
  .object({
    success: z.literal(false),
    errors: z.array(z.string()),
    data: z.enum(['null']).nullable(),
  })
  .describe('Unauthorized')

/**
 * @description Sign in request body
 */
export const signInMutationRequestSchema = z
  .object({
    email: z.string().email(),
    password: z.string().min(8),
  })
  .describe('Sign in request body')

export const signInMutationResponseSchema = z.lazy(() => signIn200Schema)
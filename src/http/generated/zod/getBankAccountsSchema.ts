/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { z } from 'zod'

/**
 * @description Success
 */
export const getBankAccounts200Schema = z
  .object({
    success: z.literal(true),
    errors: z.enum(['null']).nullable(),
    data: z.object({
      bank_accounts: z.array(
        z.object({
          id: z.string(),
          name: z.string(),
          type: z.enum(['BANK', 'CREDIT_CARD']),
          balance: z.number(),
          color: z.string(),
          creditLimit: z.number().nullable(),
          spentLimit: z.number().nullable(),
          availableLimit: z.number(),
          closingDay: z.number().nullable(),
          dueDay: z.number().nullable(),
          isActive: z.boolean(),
        }),
      ),
      credit_cards: z.array(
        z.object({
          id: z.string(),
          name: z.string(),
          type: z.enum(['BANK', 'CREDIT_CARD']),
          balance: z.number(),
          color: z.string(),
          creditLimit: z.number().nullable(),
          spentLimit: z.number().nullable(),
          availableLimit: z.number(),
          closingDay: z.number().nullable(),
          dueDay: z.number().nullable(),
          isActive: z.boolean(),
        }),
      ),
    }),
  })
  .describe('Success')

export const getBankAccountsQueryResponseSchema = z.lazy(() => getBankAccounts200Schema)
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { z } from 'zod'

/**
 * @description Created
 */
export const signUp201Schema = z
  .object({
    success: z.literal(true),
    errors: z.enum(['null']).nullable(),
    data: z.any().optional(),
  })
  .describe('Created')

/**
 * @description Bad Request
 */
export const signUp400Schema = z
  .object({
    success: z.literal(false),
    errors: z.array(z.string()),
    data: z.enum(['null']).nullable(),
  })
  .describe('Bad Request')

/**
 * @description Conflict
 */
export const signUp409Schema = z
  .object({
    success: z.literal(false),
    errors: z.array(z.string()),
    data: z.enum(['null']).nullable(),
  })
  .describe('Conflict')

/**
 * @description Sign up request body
 */
export const signUpMutationRequestSchema = z
  .object({
    name: z.string().min(3),
    email: z.string().email(),
    password: z.string().min(8),
  })
  .describe('Sign up request body')

export const signUpMutationResponseSchema = z.lazy(() => signUp201Schema)
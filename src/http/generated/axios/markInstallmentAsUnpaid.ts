/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@/lib/axios'
import type {
  MarkInstallmentAsUnpaidMutationResponse,
  MarkInstallmentAsUnpaidPathParams,
  MarkInstallmentAsUnpaid400,
  MarkInstallmentAsUnpaid404,
} from '../types/MarkInstallmentAsUnpaid'
import type { RequestConfig, ResponseErrorConfig } from '@/lib/axios'

function getMarkInstallmentAsUnpaidUrl(installmentId: MarkInstallmentAsUnpaidPathParams['installmentId']) {
  return `/installments/${installmentId}/unpay` as const
}

/**
 * @summary Mark installment as unpaid
 * {@link /installments/:installmentId/unpay}
 */
export async function markInstallmentAsUnpaid(
  installmentId: MarkInstallmentAsUnpaidPathParams['installmentId'],
  config: Partial<RequestConfig> & { client?: typeof fetch } = {},
) {
  const { client: request = fetch, ...requestConfig } = config

  const res = await request<MarkInstallmentAsUnpaidMutationResponse, ResponseErrorConfig<MarkInstallmentAsUnpaid400 | MarkInstallmentAsUnpaid404>, unknown>({
    method: 'PATCH',
    url: getMarkInstallmentAsUnpaidUrl(installmentId).toString(),
    ...requestConfig,
  })
  return res.data
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@/lib/axios'
import type {
  MarkInstallmentAsPaidMutationRequest,
  MarkInstallmentAsPaidMutationResponse,
  MarkInstallmentAsPaidPathParams,
  MarkInstallmentAsPaid400,
  MarkInstallmentAsPaid404,
} from '../types/MarkInstallmentAsPaid'
import type { RequestConfig, ResponseErrorConfig } from '@/lib/axios'

function getMarkInstallmentAsPaidUrl(installmentId: MarkInstallmentAsPaidPathParams['installmentId']) {
  return `/installments/${installmentId}/pay` as const
}

/**
 * @summary Mark installment as paid
 * {@link /installments/:installmentId/pay}
 */
export async function markInstallmentAsPaid(
  installmentId: MarkInstallmentAsPaidPathParams['installmentId'],
  data?: MarkInstallmentAsPaidMutationRequest,
  config: Partial<RequestConfig<MarkInstallmentAsPaidMutationRequest>> & { client?: typeof fetch } = {},
) {
  const { client: request = fetch, ...requestConfig } = config

  const requestData = data
  const res = await request<
    MarkInstallmentAsPaidMutationResponse,
    ResponseErrorConfig<MarkInstallmentAsPaid400 | MarkInstallmentAsPaid404>,
    MarkInstallmentAsPaidMutationRequest
  >({ method: 'PATCH', url: getMarkInstallmentAsPaidUrl(installmentId).toString(), data: requestData, ...requestConfig })
  return res.data
}
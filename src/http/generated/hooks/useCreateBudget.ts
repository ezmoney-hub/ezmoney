/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@kubb/plugin-client/clients/axios'
import type { CreateBudgetMutationRequest, CreateBudgetMutationResponse, CreateBudget400, CreateBudget404, CreateBudget409 } from '../types/CreateBudget'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import { createBudget } from '../axios/createBudget'
import { useMutation } from '@tanstack/react-query'

export const createBudgetMutationKey = () => [{ url: '/budgets' }] as const

export type CreateBudgetMutationKey = ReturnType<typeof createBudgetMutationKey>

/**
 * @summary Create a new budget
 * {@link /budgets}
 */
export function useCreateBudget<TContext>(
  options: {
    mutation?: UseMutationOptions<
      CreateBudgetMutationResponse,
      ResponseErrorConfig<CreateBudget400 | CreateBudget404 | CreateBudget409>,
      { data: CreateBudgetMutationRequest },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig<CreateBudgetMutationRequest>> & { client?: typeof fetch }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? createBudgetMutationKey()

  return useMutation<
    CreateBudgetMutationResponse,
    ResponseErrorConfig<CreateBudget400 | CreateBudget404 | CreateBudget409>,
    { data: CreateBudgetMutationRequest },
    TContext
  >(
    {
      mutationFn: async ({ data }) => {
        return createBudget(data, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}
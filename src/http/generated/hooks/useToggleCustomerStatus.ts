/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@kubb/plugin-client/clients/axios'
import type { ToggleCustomerStatusMutationResponse, ToggleCustomerStatusPathParams, ToggleCustomerStatus404 } from '../types/ToggleCustomerStatus'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import { toggleCustomerStatus } from '../axios/toggleCustomerStatus'
import { useMutation } from '@tanstack/react-query'

export const toggleCustomerStatusMutationKey = () => [{ url: '/customers/{id}/toggle' }] as const

export type ToggleCustomerStatusMutationKey = ReturnType<typeof toggleCustomerStatusMutationKey>

/**
 * @summary Toggle customer active status
 * {@link /customers/:id/toggle}
 */
export function useToggleCustomerStatus<TContext>(
  options: {
    mutation?: UseMutationOptions<
      ToggleCustomerStatusMutationResponse,
      ResponseErrorConfig<ToggleCustomerStatus404>,
      { id: ToggleCustomerStatusPathParams['id'] },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof fetch }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? toggleCustomerStatusMutationKey()

  return useMutation<
    ToggleCustomerStatusMutationResponse,
    ResponseErrorConfig<ToggleCustomerStatus404>,
    { id: ToggleCustomerStatusPathParams['id'] },
    TContext
  >(
    {
      mutationFn: async ({ id }) => {
        return toggleCustomerStatus(id, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@kubb/plugin-client/clients/axios'
import type { DeleteInvoiceMutationResponse, DeleteInvoicePathParams, DeleteInvoice400, DeleteInvoice404 } from '../types/DeleteInvoice'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import { deleteInvoice } from '../axios/deleteInvoice'
import { useMutation } from '@tanstack/react-query'

export const deleteInvoiceMutationKey = () => [{ url: '/invoices/{id}' }] as const

export type DeleteInvoiceMutationKey = ReturnType<typeof deleteInvoiceMutationKey>

/**
 * @summary Delete an invoice
 * {@link /invoices/:id}
 */
export function useDeleteInvoice<TContext>(
  options: {
    mutation?: UseMutationOptions<
      DeleteInvoiceMutationResponse,
      ResponseErrorConfig<DeleteInvoice400 | DeleteInvoice404>,
      { id: DeleteInvoicePathParams['id'] },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof fetch }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? deleteInvoiceMutationKey()

  return useMutation<DeleteInvoiceMutationResponse, ResponseErrorConfig<DeleteInvoice400 | DeleteInvoice404>, { id: DeleteInvoicePathParams['id'] }, TContext>(
    {
      mutationFn: async ({ id }) => {
        return deleteInvoice(id, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}
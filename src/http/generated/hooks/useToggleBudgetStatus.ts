/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@kubb/plugin-client/clients/axios'
import type { ToggleBudgetStatusMutationResponse, ToggleBudgetStatusPathParams, ToggleBudgetStatus404 } from '../types/ToggleBudgetStatus'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import { toggleBudgetStatus } from '../axios/toggleBudgetStatus'
import { useMutation } from '@tanstack/react-query'

export const toggleBudgetStatusMutationKey = () => [{ url: '/budgets/{id}/toggle' }] as const

export type ToggleBudgetStatusMutationKey = ReturnType<typeof toggleBudgetStatusMutationKey>

/**
 * @summary Toggle budget active status
 * {@link /budgets/:id/toggle}
 */
export function useToggleBudgetStatus<TContext>(
  options: {
    mutation?: UseMutationOptions<
      ToggleBudgetStatusMutationResponse,
      ResponseErrorConfig<ToggleBudgetStatus404>,
      { id: ToggleBudgetStatusPathParams['id'] },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof fetch }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? toggleBudgetStatusMutationKey()

  return useMutation<ToggleBudgetStatusMutationResponse, ResponseErrorConfig<ToggleBudgetStatus404>, { id: ToggleBudgetStatusPathParams['id'] }, TContext>(
    {
      mutationFn: async ({ id }) => {
        return toggleBudgetStatus(id, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}
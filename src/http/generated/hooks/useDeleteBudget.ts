/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@kubb/plugin-client/clients/axios'
import type { DeleteBudgetMutationResponse, DeleteBudgetPathParams, DeleteBudget404 } from '../types/DeleteBudget'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import { deleteBudget } from '../axios/deleteBudget'
import { useMutation } from '@tanstack/react-query'

export const deleteBudgetMutationKey = () => [{ url: '/budgets/{id}' }] as const

export type DeleteBudgetMutationKey = ReturnType<typeof deleteBudgetMutationKey>

/**
 * @summary Delete a budget
 * {@link /budgets/:id}
 */
export function useDeleteBudget<TContext>(
  options: {
    mutation?: UseMutationOptions<DeleteBudgetMutationResponse, ResponseErrorConfig<DeleteBudget404>, { id: DeleteBudgetPathParams['id'] }, TContext> & {
      client?: QueryClient
    }
    client?: Partial<RequestConfig> & { client?: typeof fetch }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? deleteBudgetMutationKey()

  return useMutation<DeleteBudgetMutationResponse, ResponseErrorConfig<DeleteBudget404>, { id: DeleteBudgetPathParams['id'] }, TContext>(
    {
      mutationFn: async ({ id }) => {
        return deleteBudget(id, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}
/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@kubb/plugin-client/clients/axios'
import type {
  MarkInstallmentAsPaidMutationRequest,
  MarkInstallmentAsPaidMutationResponse,
  MarkInstallmentAsPaidPathParams,
  MarkInstallmentAsPaid400,
  MarkInstallmentAsPaid404,
} from '../types/MarkInstallmentAsPaid'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import { markInstallmentAsPaid } from '../axios/markInstallmentAsPaid'
import { useMutation } from '@tanstack/react-query'

export const markInstallmentAsPaidMutationKey = () => [{ url: '/installments/{installmentId}/pay' }] as const

export type MarkInstallmentAsPaidMutationKey = ReturnType<typeof markInstallmentAsPaidMutationKey>

/**
 * @summary Mark installment as paid
 * {@link /installments/:installmentId/pay}
 */
export function useMarkInstallmentAsPaid<TContext>(
  options: {
    mutation?: UseMutationOptions<
      MarkInstallmentAsPaidMutationResponse,
      ResponseErrorConfig<MarkInstallmentAsPaid400 | MarkInstallmentAsPaid404>,
      { installmentId: MarkInstallmentAsPaidPathParams['installmentId']; data?: MarkInstallmentAsPaidMutationRequest },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig<MarkInstallmentAsPaidMutationRequest>> & { client?: typeof fetch }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? markInstallmentAsPaidMutationKey()

  return useMutation<
    MarkInstallmentAsPaidMutationResponse,
    ResponseErrorConfig<MarkInstallmentAsPaid400 | MarkInstallmentAsPaid404>,
    { installmentId: MarkInstallmentAsPaidPathParams['installmentId']; data?: MarkInstallmentAsPaidMutationRequest },
    TContext
  >(
    {
      mutationFn: async ({ installmentId, data }) => {
        return markInstallmentAsPaid(installmentId, data, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}
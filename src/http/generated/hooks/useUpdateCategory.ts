/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@kubb/plugin-client/clients/axios'
import type {
  UpdateCategoryMutationRequest,
  UpdateCategoryMutationResponse,
  UpdateCategoryPathParams,
  UpdateCategory400,
  UpdateCategory404,
  UpdateCategory409,
} from '../types/UpdateCategory'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import { updateCategory } from '../axios/updateCategory'
import { useMutation } from '@tanstack/react-query'

export const updateCategoryMutationKey = () => [{ url: '/categories/{id}' }] as const

export type UpdateCategoryMutationKey = ReturnType<typeof updateCategoryMutationKey>

/**
 * @summary Update a category
 * {@link /categories/:id}
 */
export function useUpdateCategory<TContext>(
  options: {
    mutation?: UseMutationOptions<
      UpdateCategoryMutationResponse,
      ResponseErrorConfig<UpdateCategory400 | UpdateCategory404 | UpdateCategory409>,
      { id: UpdateCategoryPathParams['id']; data: UpdateCategoryMutationRequest },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig<UpdateCategoryMutationRequest>> & { client?: typeof fetch }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? updateCategoryMutationKey()

  return useMutation<
    UpdateCategoryMutationResponse,
    ResponseErrorConfig<UpdateCategory400 | UpdateCategory404 | UpdateCategory409>,
    { id: UpdateCategoryPathParams['id']; data: UpdateCategoryMutationRequest },
    TContext
  >(
    {
      mutationFn: async ({ id, data }) => {
        return updateCategory(id, data, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}
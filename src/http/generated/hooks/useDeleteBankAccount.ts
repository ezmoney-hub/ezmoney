/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@kubb/plugin-client/clients/axios'
import type { DeleteBankAccountMutationResponse, DeleteBankAccountPathParams, DeleteBankAccount400, DeleteBankAccount404 } from '../types/DeleteBankAccount'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import { deleteBankAccount } from '../axios/deleteBankAccount'
import { useMutation } from '@tanstack/react-query'

export const deleteBankAccountMutationKey = () => [{ url: '/bank-accounts/{id}' }] as const

export type DeleteBankAccountMutationKey = ReturnType<typeof deleteBankAccountMutationKey>

/**
 * @summary Delete a bank account
 * {@link /bank-accounts/:id}
 */
export function useDeleteBankAccount<TContext>(
  options: {
    mutation?: UseMutationOptions<
      DeleteBankAccountMutationResponse,
      ResponseErrorConfig<DeleteBankAccount400 | DeleteBankAccount404>,
      { id: DeleteBankAccountPathParams['id'] },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof fetch }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? deleteBankAccountMutationKey()

  return useMutation<
    DeleteBankAccountMutationResponse,
    ResponseErrorConfig<DeleteBankAccount400 | DeleteBankAccount404>,
    { id: DeleteBankAccountPathParams['id'] },
    TContext
  >(
    {
      mutationFn: async ({ id }) => {
        return deleteBankAccount(id, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}
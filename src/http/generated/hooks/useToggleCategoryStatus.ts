/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@kubb/plugin-client/clients/axios'
import type { ToggleCategoryStatusMutationResponse, ToggleCategoryStatusPathParams, ToggleCategoryStatus404 } from '../types/ToggleCategoryStatus'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import { toggleCategoryStatus } from '../axios/toggleCategoryStatus'
import { useMutation } from '@tanstack/react-query'

export const toggleCategoryStatusMutationKey = () => [{ url: '/categories/{id}/toggle' }] as const

export type ToggleCategoryStatusMutationKey = ReturnType<typeof toggleCategoryStatusMutationKey>

/**
 * @summary Toggle category active status
 * {@link /categories/:id/toggle}
 */
export function useToggleCategoryStatus<TContext>(
  options: {
    mutation?: UseMutationOptions<
      ToggleCategoryStatusMutationResponse,
      ResponseErrorConfig<ToggleCategoryStatus404>,
      { id: ToggleCategoryStatusPathParams['id'] },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof fetch }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? toggleCategoryStatusMutationKey()

  return useMutation<
    ToggleCategoryStatusMutationResponse,
    ResponseErrorConfig<ToggleCategoryStatus404>,
    { id: ToggleCategoryStatusPathParams['id'] },
    TContext
  >(
    {
      mutationFn: async ({ id }) => {
        return toggleCategoryStatus(id, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}
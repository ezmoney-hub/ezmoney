generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id
  name          String
  email         String   @unique
  emailVerified Boolean
  image         String?
  createdAt     DateTime
  updatedAt     DateTime

  invoices Invoice[]
  accounts Account[]
  sessions Session[]
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  userId String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String   @unique
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?

  userId String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?
}

model Invoice {
  id           String    @id @default(uuid())
  name         String
  description  String?
  createdAt    DateTime  @default(now())
  dueDate      DateTime
  updatedAt    DateTime? @updatedAt
  unitValue    Float
  installments Int
  status       String // "paid" | "overdue" | "draft" | "pending"
  paymentType  String // "unique" | "recurring"
  category     String // "subscription" | "loan" | "purchase" | "general" | "streaming"

  userId String

  user User @relation(fields: [userId], references: [id])

  @@map("invoices")
}
